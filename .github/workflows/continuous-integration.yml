name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  Linting:
    runs-on: ubuntu-latest
    env:
      POETRY_VIRTUALENVS_CREATE: false
    if: "!contains(needs.pre_ci.outputs.commit_message, '[skip ci]')"
    steps:
      - name: Checkout Project
        uses: actions/checkout@7884fcad6b5d53d10323aee724dc68d8b9096a2e # tag=v2

      - name: Setup python
        id: python
        uses: actions/setup-python@7f80679172b057fc5e90d70d197929d454754a5a # tag=v2
        with:
          python-version: '3.9'
      
      - name: Install dependencies using poetry
        run: |
          pip install poetry
          poetry install
      
      - name: Setup node.js
        uses: actions/setup-node@1f8c6b94b26d0feae1e387ca63ccbdc44d27b561 # tag=v2
        with:
          node-version: '18'

      - name: Run Pyright
        uses: jakebailey/pyright-action@cc73d260db0227d4c5b1a656e5debb5d37cad58e # tag=v1
      
      - name: Run black
        run: |
          black --check .
